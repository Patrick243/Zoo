@using System.Security.Claims;
@model List<TransportApp.Domain.Route>
@{
    ViewData["Title"] = "Index";
}


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2AtBtUgaKNBQGFrSwH-cBsiIkQmKMViY&libraries=places">

</script>
<script type="text/javascript">
    var source, destination;
    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();
    google.maps.event.addDomListener(window, 'load', function () {
        new google.maps.places.SearchBox(document.getElementById('txtSource'));
        new google.maps.places.SearchBox(document.getElementById('txtDestination'));
        directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
    });
    document.getElementById('mode').addEventListener('change', function () {
        calculateAndDisplayRoute(directionsService, directionsDisplay);
    });
    function GetRoute() {
        var mapOptions = {
            zoom: 11,
            center: { lat: 12.9081, lng: 77.6476 }
        };
        map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('dvPanel'));

        calculateAndDisplayRoute(directionsService, directionsDisplay);
        document.getElementById('mode').addEventListener('change', function () {
            calculateAndDisplayRoute(directionsService, directionsDisplay);
        });


        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            source = document.getElementById("txtSource").value;
            destination = document.getElementById("txtDestination").value;
            var selectedMode = document.getElementById('mode').value;
            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix({
                origins: [source],
                destinations: [destination],
                travelMode: google.maps.TravelMode[selectedMode],
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {
                if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                    var distance = response.rows[0].elements[0].distance.text;
                    var duration = response.rows[0].elements[0].duration.text;
                    var dvDistance = document.getElementById("dvDistance");
                    dvDistance.innerHTML = "";
                    dvDistance.innerHTML += "Distance Is: " + distance + "<br />";
                    dvDistance.innerHTML += "Duration Is:" + duration;

                }
            });
            directionsService.route({
                origin: source,  // Hsr Layout.
                destination: destination,  // marathahalli.

                travelMode: google.maps.TravelMode[selectedMode]

            }, function (response, status) {
                if (status == 'OK') {

                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions Query Unavailable Due To ' + status);
                }

            });
        }



    }
</script>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Routes Of the city</h2>
        </div>
        @{
            if (User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, "admin"))
            {
                <div class="col-6 d-flex p-2 justify-content-end">
                    <a asp-controller="Route" asp-action="Create" class="btn btn-info d-flex p-2 justify-content-end">
                        <i class="bi bi-plus-circle pl-1"></i>&nbsp;Add New Route
                    </a>

                </div>
            }
        }

        <form class="d-flex">
            <input class="form-control me-sm-2" type="search" placeholder="Search">
            <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
        </form>

    </div>
</div>
<hr class="bg-primary" />
<table class="table table-bordered table-striped" style="width:100%;">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name Of Route</th>
            <th>Depart</th>
            <th>Arrival</th>
            <th>Bus Stops</th>
            <th>Itineraire</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 1;
        }
        @foreach (var route in Model)
        {
            <tr>
                <td>@i</td>
                <td>@route.Name</td>
                <td>@route.InitialPlace</td>
                <td>@route.FinalPlace</td>
                <td><a class="btn btn-primary" asp-controller="BusStop" asp-action="Index" asp-route-id="@route.Id">View Bus Stops</a></td>
                @{
                    if (User.HasClaim(ClaimsIdentity.DefaultRoleClaimType, "admin"))
                    {
                        <td>
                            <div class="w-75 btn-group" role="group">
                                <a asp-controller="Route" asp-action="Edit" class="btn btn-primary" asp-route-id="@route.Id">
                                    <i class="bi bi-pencil-square"></i>&nbsp;Edit
                                </a>
                                <a asp-controller="Route" asp-action="Delete" class="btn btn-danger" asp-route-id="@route.Id">
                                    <i class="bi bi-trash3-fill"></i>&nbsp;Delete
                                </a>
                            </div>
                        </td>
                    }
                }
                <td><a class="btn btn-primary" asp-controller="Map" asp-action="Index" asp-route-id="@route.Id">Go To Maps</a></td>
            </tr>
            i++;
        }
    </tbody>
</table>

@{
    ViewBag.Title = "Itinéraire";
}


